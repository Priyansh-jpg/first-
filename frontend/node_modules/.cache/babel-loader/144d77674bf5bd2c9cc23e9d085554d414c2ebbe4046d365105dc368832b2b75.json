{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./win.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AverageGoals=()=>{const[year,setYear]=useState('');const[teams,setTeams]=useState([]);const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setMessage('');setTeams([]);setLoading(true);try{const response=await axios.get('https://footballscore-8gph.onrender.com/api/football/averageGoals',{params:{Year:year}});setTeams(response.data.data);// Set the teams data from the API response\nsetMessage(response.data.message);}catch(error){var _error$response,_error$response$data;setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'An error occurred while fetching the data.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"average-goals-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Average Goals per Team\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year\",children:\"Year:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"year\",name:\"year\",placeholder:\"Enter year\",value:year,onChange:e=>setYear(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Loading...':'Get Average Goals'})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),teams.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"results\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Teams for Year \",year]}),teams.map((team,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"team\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Team:\"}),\" \",team.Team]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Year:\"}),\" \",team.Year]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Average Goals For:\"}),\" \",team.averageGoalsFor.toFixed(2)]}),/*#__PURE__*/_jsx(\"hr\",{})]},index))]})]});};export default AverageGoals;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","AverageGoals","year","setYear","teams","setTeams","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","response","get","params","Year","data","error","_error$response","_error$response$data","className","children","onSubmit","htmlFor","type","id","name","placeholder","value","onChange","target","required","disabled","length","map","team","index","Team","averageGoalsFor","toFixed"],"sources":["C:/Users/PRIYANSH/OneDrive/Desktop/football-score/frontend/src/component/averagegoals.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './win.css';\r\nconst AverageGoals = () => {\r\n    const [year, setYear] = useState('');\r\n    const [teams, setTeams] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('');\r\n        setTeams([]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.get('https://footballscore-8gph.onrender.com/api/football/averageGoals', {\r\n                params: { Year: year },\r\n            });\r\n            setTeams(response.data.data); // Set the teams data from the API response\r\n            setMessage(response.data.message);\r\n        } catch (error) {\r\n            setMessage(\r\n                error.response?.data?.message || 'An error occurred while fetching the data.'\r\n            );\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"average-goals-container\">\r\n            <h2>Average Goals per Team</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"year\">Year:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                        placeholder=\"Enter year\"\r\n                        value={year}\r\n                        onChange={(e) => setYear(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading...' : 'Get Average Goals'}\r\n                </button>\r\n            </form>\r\n\r\n            {message && <p className=\"message\">{message}</p>}\r\n\r\n            {teams.length > 0 && (\r\n                <div className=\"results\">\r\n                    <h3>Teams for Year {year}</h3>\r\n                    {teams.map((team, index) => (\r\n                        <div key={index} className=\"team\">\r\n                            <p><strong>Team:</strong> {team.Team}</p>\r\n                            <p><strong>Year:</strong> {team.Year}</p>\r\n                            <p><strong>Average Goals For:</strong> {team.averageGoalsFor.toFixed(2)}</p>\r\n                            <hr />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AverageGoals;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}